=================================================
Project : closure_128	start : 17/08/24 03:48
Current failed test : com.google.javascript.jscomp.CodePrinterTest::testIssue942 | 17/08/24 03:48
Thu Aug 24 04:01:02 AEST 2017 com.google.javascript.jscomp.parsing.IRFactory,409
Thu Aug 24 04:13:59 AEST 2017 com.google.javascript.jscomp.parsing.IRFactory,410
Thu Aug 24 04:14:00 AEST 2017 com.google.javascript.jscomp.parsing.IRFactory,411
Thu Aug 24 04:14:01 AEST 2017 com.google.javascript.jscomp.parsing.IRFactory,414
Thu Aug 24 04:14:01 AEST 2017 com.google.javascript.jscomp.parsing.IRFactory,415
Thu Aug 24 04:14:02 AEST 2017 com.google.javascript.jscomp.parsing.IRFactory,419
Thu Aug 24 04:17:48 AEST 2017 com.google.javascript.jscomp.parsing.IRFactory,422
Thu Aug 24 04:21:14 AEST 2017 com.google.javascript.jscomp.parsing.IRFactory,423
Thu Aug 24 04:21:15 AEST 2017 com.google.javascript.jscomp.parsing.IRFactory,542
Thu Aug 24 04:21:18 AEST 2017 com.google.javascript.jscomp.parsing.IRFactory,543
Thu Aug 24 04:21:19 AEST 2017 com.google.javascript.jscomp.CodeGenerator,791

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int index=0;index<len;index++){
if(Character.isUpperCase(s.charAt(index))||!Character.isLetter(s.charAt(index))){
return true;
}
char c=s.charAt(index);
if(c<'0'||c>'9'){
return false;
}
}

Time : 17/08/24 04:26
----------------------------------------
Thu Aug 24 04:45:57 AEST 2017 com.google.javascript.jscomp.CodeGenerator,650
Thu Aug 24 05:12:18 AEST 2017 com.google.javascript.jscomp.CodeGenerator,652
Thu Aug 24 05:49:37 AEST 2017 com.google.javascript.jscomp.CodeGenerator,653
Thu Aug 24 06:11:01 AEST 2017 com.google.javascript.jscomp.CodeGenerator,698
Thu Aug 24 06:11:08 AEST 2017 com.google.javascript.jscomp.CodeGenerator,805
Thu Aug 24 06:14:19 AEST 2017 com.google.javascript.jscomp.CodeGenerator,694

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!n.isQuotedString()&&!TokenStream.isKeyword(key)){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 06:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!GT_ESCAPED.equals(key)){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 07:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!GT_ESCAPED.equals(key)||(childCount-childCount)>Byte.MAX_VALUE&&!TokenStream.isKeyword(key)){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 07:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
childCount=childCount;
if(!GT_ESCAPED.equals(key)){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 07:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!GT_ESCAPED.equals(key)||(childCount-childCount)>Byte.MAX_VALUE&&(childCount-childCount)<Byte.MIN_VALUE){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 07:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
childCount=childCount;
if(!GT_ESCAPED.equals(key)||(childCount-childCount)>Byte.MAX_VALUE&&!TokenStream.isKeyword(key)){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 07:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
childCount=childCount;
if(!GT_ESCAPED.equals(key)||(childCount-childCount)>Byte.MAX_VALUE&&(childCount-childCount)<Byte.MIN_VALUE){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 07:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!ControlFlowGraph.isEnteringNewCfgNode(c)&&!TokenStream.isKeyword(key)){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 07:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!c.isExprResult()&&!TokenStream.isKeyword(key)){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 08:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((!c.isNumber()||c.getDouble()!=0)){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 08:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((c!=null)&&!TokenStream.isKeyword(key)){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 08:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!c.isThis()&&!TokenStream.isKeyword(key)){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 08:28
----------------------------------------
Thu Aug 24 08:37:19 AEST 2017 com.google.javascript.jscomp.CodeGenerator,695
Thu Aug 24 08:37:20 AEST 2017 com.google.javascript.jscomp.CompilerOptions,1978
Thu Aug 24 08:37:56 AEST 2017 Thu Aug 24 08:37:56 AEST 2017 : com.google.javascript.jscomp.CompilerOptions,1979=>Find no block
Thu Aug 24 08:37:57 AEST 2017 com.google.javascript.jscomp.CodeGenerator,786
Thu Aug 24 08:37:58 AEST 2017 com.google.javascript.jscomp.CodeGenerator,787
Thu Aug 24 08:38:00 AEST 2017 com.google.javascript.jscomp.CodeGenerator,784
Thu Aug 24 08:38:01 AEST 2017 com.google.javascript.jscomp.CodeGenerator,785
Thu Aug 24 08:38:02 AEST 2017 com.google.javascript.jscomp.CodeGenerator,795
Thu Aug 24 08:38:03 AEST 2017 com.google.javascript.jscomp.CompilerOptions,2010
Thu Aug 24 08:40:23 AEST 2017 Thu Aug 24 08:40:23 AEST 2017 : com.google.javascript.jscomp.CompilerOptions,2011=>Find no block
Thu Aug 24 08:40:25 AEST 2017 com.google.javascript.jscomp.parsing.IRFactory,541
Thu Aug 24 08:40:25 AEST 2017 com.google.javascript.jscomp.CompilerOptions,740
Thu Aug 24 08:42:43 AEST 2017 Thu Aug 24 08:42:43 AEST 2017 : com.google.javascript.jscomp.CompilerOptions,741=>Find no block
Thu Aug 24 08:42:44 AEST 2017 com.google.javascript.jscomp.Compiler,1609
Thu Aug 24 08:42:50 AEST 2017 com.google.javascript.jscomp.Compiler,1605
Thu Aug 24 08:47:41 AEST 2017 com.google.javascript.jscomp.Compiler,1606
Thu Aug 24 08:47:43 AEST 2017 com.google.javascript.jscomp.Compiler,1608
Thu Aug 24 08:47:44 AEST 2017 com.google.javascript.jscomp.Compiler,1611
Thu Aug 24 08:47:45 AEST 2017 com.google.javascript.jscomp.Compiler,1612
Thu Aug 24 08:47:46 AEST 2017 com.google.javascript.jscomp.CodeGenerator,681

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
Preconditions.checkState(c.isStringKey());
String key=c.getString();
if(!n.isQuotedString()&&!TokenStream.isKeyword(key)){
add(key);
}else {
double d=getSimpleNumber(key);
if(!Double.isNaN(d)){
cc.addNumber(d);
}else {
addExpr(c,1,Context.OTHER);
}
}

Time : 17/08/24 08:49
----------------------------------------
Timeout time : 17/08/24 09:01
