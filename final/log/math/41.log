=================================================
Project : math_41	start : 17/08/23 19:20
Current failed test : org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted | 17/08/23 19:20
Wed Aug 23 19:21:18 AEST 2017 org.apache.commons.math.stat.descriptive.moment.Variance,370
Wed Aug 23 19:22:23 AEST 2017 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,222
Wed Aug 23 19:22:49 AEST 2017 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,258
Wed Aug 23 19:22:51 AEST 2017 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,262
Wed Aug 23 19:24:13 AEST 2017 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,266
Wed Aug 23 19:25:28 AEST 2017 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,267
Wed Aug 23 19:48:19 AEST 2017 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,268
Wed Aug 23 19:48:20 AEST 2017 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,271
Wed Aug 23 19:48:20 AEST 2017 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,274
Wed Aug 23 19:48:20 AEST 2017 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,277
Wed Aug 23 19:48:20 AEST 2017 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,278
Wed Aug 23 19:48:20 AEST 2017 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,282
Wed Aug 23 19:48:22 AEST 2017 org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic,286
Wed Aug 23 19:48:54 AEST 2017 org.apache.commons.math.stat.descriptive.moment.Variance,316

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}

Time : 17/08/23 19:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}

Time : 17/08/23 19:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length>values.length){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 17/08/23 19:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(begin+length>values.length){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 17/08/23 19:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(begin>values.length){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 17/08/23 19:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
values[begin]=var;
if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 17/08/23 19:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}

Time : 17/08/23 19:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}

Time : 17/08/23 19:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(length!=1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 17/08/23 19:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(weights.length!=1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 17/08/23 20:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(weights.length==values.length){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,weights,m,begin,length);
}

Time : 17/08/23 20:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 17/08/23 20:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 17/08/23 20:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 17/08/23 20:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 17/08/23 20:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double var=Double.NaN;
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 17/08/23 20:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double var=Double.NaN;
if(test(values,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 17/08/23 20:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double var=Double.NaN;
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 17/08/23 20:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double var=Double.NaN;
if(test(values,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}
}

Time : 17/08/23 20:13
----------------------------------------
Wed Aug 23 20:17:10 AEST 2017 org.apache.commons.math.stat.descriptive.moment.Variance,318
Wed Aug 23 20:17:10 AEST 2017 org.apache.commons.math.stat.descriptive.moment.Variance,319
Wed Aug 23 20:17:10 AEST 2017 org.apache.commons.math.stat.descriptive.moment.Variance,320
Wed Aug 23 20:17:11 AEST 2017 org.apache.commons.math.stat.descriptive.moment.Variance,322
Wed Aug 23 20:17:11 AEST 2017 org.apache.commons.math.stat.descriptive.moment.Variance,323
Wed Aug 23 20:17:11 AEST 2017 org.apache.commons.math.stat.descriptive.moment.Variance,324
Wed Aug 23 20:17:11 AEST 2017 org.apache.commons.math.stat.descriptive.moment.Variance,325
Wed Aug 23 20:17:11 AEST 2017 org.apache.commons.math.stat.descriptive.moment.Variance,328

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}
}
return var;

Time : 17/08/23 20:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,weights,begin,length);
var=evaluate(values,m,begin,length);
}
}
return var;

Time : 17/08/23 20:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,weights,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}
}
return var;

Time : 17/08/23 20:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(test(values,begin,length)){
clear();
if(length==1){
var=0.0;
}else if(length>1){
Mean mean=new Mean();
double m=mean.evaluate(values,begin,length);
var=evaluate(values,m,begin,length);
}
}
return var;

Time : 17/08/23 20:21
----------------------------------------
Wed Aug 23 20:23:14 AEST 2017 org.apache.commons.math.stat.descriptive.moment.Variance,504

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum=dev/accum2;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=mean-var;
accum=dev/accum2;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum=dev/accum2;
var+=accum;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=mean-var;
accum=dev/accum2;
var+=accum;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum2=var*dev;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=(weights[begin]-accum)*var+2.0*var;
accum2=var*dev;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=(weights[begin]-accum)*var+2.0*var;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum2=var*dev;
weights[begin+1]=accum+accum2;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum2=var*dev;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
weights[begin+1]=accum+accum2;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=(weights[begin]-accum)*var+2.0*var;
accum2=var*dev;
weights[begin+1]=accum+accum2;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=(weights[begin]-accum)*var+2.0*var;
accum2=var*dev;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=(weights[begin]-accum)*var+2.0*var;
weights[begin+1]=accum+accum2;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum2=var*dev;
weights[begin+1]=accum+accum2;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
dev=(weights[begin]-accum)*var+2.0*var;
accum2=var*dev;
weights[begin+1]=accum+accum2;
accum=var*dev-mean;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum2=var;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum=var;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
accum2=mean;
accum=var;
for(int i=begin;i<begin+length;i++){
dev=values[i]-mean;
accum+=weights[i]*(dev*dev);
accum2+=weights[i]*dev;
}

Time : 17/08/23 20:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=begin;i<begin;i++){
sumWts+=weights[i];
}

Time : 17/08/23 20:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=begin;i<begin+length;i++){
sumWts+=weights[i];
}

Time : 17/08/23 20:53
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6071504429856334 : [/home/similarfix/d4j/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java=>0,0]
for(int i=begin;i<begin+length;i++){
sumLog+=FastMath.log(values[i]);
}

Time : 17/08/23 20:54
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/similarfix/d4j/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java=>520,522]
for(int i=0;i<weights.length;i++){
sumWts+=weights[i];
}

Time : 17/08/23 20:54
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/similarfix/d4j/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java=>520,522]
for(int i=begin;i<begin+length;i++){
sumWts+=weights[i];
}

Time : 17/08/23 20:54
----------------------------------------
Success time : 17/08/23 20:54
