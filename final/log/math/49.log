=================================================
Project : math_49	start : 17/08/24 08:59
Current failed test : org.apache.commons.math.linear.SparseRealVectorTest::testConcurrentModification | 17/08/24 09:00
Thu Aug 24 09:01:25 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,216
Thu Aug 24 09:04:06 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,217
Thu Aug 24 09:04:08 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,564
Thu Aug 24 09:04:12 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,368
Thu Aug 24 09:13:10 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,369
Thu Aug 24 09:13:11 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,370
Thu Aug 24 09:13:12 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,371
Thu Aug 24 09:13:13 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,372
Thu Aug 24 09:13:14 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,373
Thu Aug 24 09:13:15 AEST 2017 Thu Aug 24 09:13:15 AEST 2017 : org.apache.commons.math.linear.AbstractRealVector,67=>Find no block
Thu Aug 24 09:13:16 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,186
Thu Aug 24 09:16:09 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,187
Thu Aug 24 09:16:11 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,354

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final int hash=findInsertionIndex(key);
int index=hash&mask;
if(containsKey(key,index)){
return doRemove(index);
}

Time : 17/08/24 09:17
----------------------------------------
Thu Aug 24 09:21:59 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,355
Thu Aug 24 09:22:00 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,356
Thu Aug 24 09:23:09 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,357
Thu Aug 24 09:23:10 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,394

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys[index]=0;
states[index]=REMOVED;
 final double previous=values[index];
values[index]=missingEntries;
--count;
++count;
return previous;

Time : 17/08/24 09:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys[index]=PERTURB_SHIFT;
states[index]=REMOVED;
 final double previous=values[index];
values[index]=missingEntries;
--count;
++count;
return previous;

Time : 17/08/24 09:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys[index]=0;
states[index]=FULL;
 final double previous=values[index];
values[index]=missingEntries;
--count;
++count;
return previous;

Time : 17/08/24 09:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys[index]=PERTURB_SHIFT;
states[index]=FULL;
 final double previous=values[index];
values[index]=missingEntries;
--count;
++count;
return previous;

Time : 17/08/24 09:28
----------------------------------------
Thu Aug 24 09:31:07 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,395
Thu Aug 24 09:31:08 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,396
Thu Aug 24 09:31:09 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,397
Thu Aug 24 09:31:10 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,398
Thu Aug 24 09:31:11 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,399
Thu Aug 24 09:31:12 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,400
Thu Aug 24 09:31:13 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,666

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(entries.containsKey(index)){
entries.remove(virtualSize);
}

Time : 17/08/24 09:31
----------------------------------------
Thu Aug 24 09:33:27 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,667
Thu Aug 24 09:33:28 AEST 2017 org.apache.commons.math.linear.AbstractRealVector,63
Thu Aug 24 09:38:12 AEST 2017 org.apache.commons.math.linear.AbstractRealVector,64
Thu Aug 24 09:41:35 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,210

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final int hash=findInsertionIndex(key);
int index=hash&mask;
if(containsKey(key,index)){
return true;
}

Time : 17/08/24 09:42
----------------------------------------
Thu Aug 24 09:47:34 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,211
Thu Aug 24 09:47:35 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,212
Thu Aug 24 09:48:45 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,213
Thu Aug 24 09:48:46 AEST 2017 Thu Aug 24 09:48:46 AEST 2017 : org.apache.commons.math.util.OpenIntToDoubleHashMap,133=>Find no block
Thu Aug 24 09:48:49 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,134
Thu Aug 24 10:02:10 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,135
Thu Aug 24 10:02:11 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,136
Thu Aug 24 10:14:06 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,137
Thu Aug 24 10:26:21 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,138
Thu Aug 24 10:36:47 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,139

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.values,0,values,0,length);
states=new byte[length];
System.arraycopy(source.values,0,values,0,length);

Time : 17/08/24 10:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.keys,0,keys,0,length);
states=new byte[length];
System.arraycopy(source.values,0,values,0,length);

Time : 17/08/24 10:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.values,0,values,0,length);
states=new byte[length];
values=new double[length];
System.arraycopy(source.values,0,values,0,length);

Time : 17/08/24 10:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.keys,0,keys,0,length);
states=new byte[length];
values=new double[length];
System.arraycopy(source.values,0,values,0,length);

Time : 17/08/24 10:47
----------------------------------------
Thu Aug 24 11:04:40 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,140

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[length];
System.arraycopy(source.values,0,values,0,length);
missingEntries=source.missingEntries;

Time : 17/08/24 11:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
size=source.size;
states=new byte[length];
System.arraycopy(source.values,0,values,0,length);
missingEntries=source.missingEntries;

Time : 17/08/24 11:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[length];
System.arraycopy(values,0,values,0,length);
missingEntries=source.missingEntries;

Time : 17/08/24 11:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(values,0,values,0,length);
states=new byte[length];
System.arraycopy(values,0,values,0,length);
missingEntries=source.missingEntries;

Time : 17/08/24 11:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[length];
System.arraycopy(values,0,new double[length],0,length);
missingEntries=source.missingEntries;

Time : 17/08/24 11:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[length];
System.arraycopy(values,0,this.values,0,length);
missingEntries=source.missingEntries;

Time : 17/08/24 11:21
----------------------------------------
Thu Aug 24 11:30:11 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,141

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.values,0,values,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 11:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
states=new byte[length];
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 11:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.values,0,values,0,length);
states=new byte[length];
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 11:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(values,0,values,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 11:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(values,0,values,0,length);
System.arraycopy(values,0,values,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 11:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.keys,0,keys,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 11:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[length];
System.arraycopy(source.keys,0,keys,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 11:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
values=new double[length];
System.arraycopy(source.keys,0,keys,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 11:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[length];
values=new double[length];
System.arraycopy(source.keys,0,keys,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 11:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(values,0,new double[length],0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 11:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(values,0,this.values,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 11:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
this.values=new double[length];
System.arraycopy(values,0,this.values,0,length);
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 11:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,size);
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 12:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
values=new double[size];
System.arraycopy(source.states,0,states,0,size);
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 12:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 12:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
keys=new int[computeCapacity(length)];
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 12:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
values=new double[computeCapacity(length)];
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 12:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
keys=new int[computeCapacity(length)];
values=new double[computeCapacity(length)];
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 12:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=size;

Time : 17/08/24 12:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
mask=computeCapacity(length)-1;
System.arraycopy(source.states,0,states,0,length);
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 12:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
System.arraycopy(source.states,0,states,0,length);
keys=new int[computeCapacity(length)];
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=size;

Time : 17/08/24 12:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
mask=computeCapacity(length)-1;
System.arraycopy(source.states,0,states,0,length);
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=size;

Time : 17/08/24 12:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
mask=computeCapacity(length)-1;
System.arraycopy(source.states,0,states,0,length);
keys=new int[computeCapacity(length)];
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=source.size;

Time : 17/08/24 12:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
mask=computeCapacity(length)-1;
System.arraycopy(source.states,0,states,0,length);
keys=new int[computeCapacity(length)];
states=new byte[computeCapacity(length)];
missingEntries=source.missingEntries;
size=size;

Time : 17/08/24 12:24
----------------------------------------
Thu Aug 24 12:26:22 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,142

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[computeCapacity(PERTURB_SHIFT)];
missingEntries=source.missingEntries;
size=source.size;
mask=source.mask;

Time : 17/08/24 12:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
missingEntries=source.missingEntries;
size=source.size;
mask=source.mask;

Time : 17/08/24 12:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
values=new double[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
missingEntries=source.missingEntries;
size=source.size;
mask=source.mask;

Time : 17/08/24 12:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
values=new double[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
missingEntries=source.missingEntries;
size=source.size;
mask=source.mask;

Time : 17/08/24 12:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[computeCapacity(PERTURB_SHIFT)];
missingEntries=source.missingEntries;
size=size;
mask=source.mask;

Time : 17/08/24 12:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
missingEntries=source.missingEntries;
size=size;
mask=source.mask;

Time : 17/08/24 12:35
----------------------------------------
Thu Aug 24 12:37:09 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,143

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
size=source.size;
mask=source.mask;
states=new byte[computeCapacity(PERTURB_SHIFT)];
count=source.count;

Time : 17/08/24 12:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
size=source.size;
mask=source.mask;
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
count=source.count;

Time : 17/08/24 12:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
size=source.size;
mask=source.mask;
values=new double[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
count=source.count;

Time : 17/08/24 12:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
size=source.size;
mask=source.mask;
keys=new int[computeCapacity(PERTURB_SHIFT)];
values=new double[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
count=source.count;

Time : 17/08/24 12:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=source.size;
mask=source.mask;
count=source.count;

Time : 17/08/24 12:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=size;
mask=source.mask;
count=source.count;

Time : 17/08/24 12:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=source.size;
mask=source.mask;
count=count;

Time : 17/08/24 12:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=source.size;
mask=source.mask;
count=source.count;

Time : 17/08/24 12:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=size;
mask=source.mask;
count=count;

Time : 17/08/24 12:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=size;
mask=source.mask;
count=source.count;

Time : 17/08/24 12:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=source.size;
mask=source.mask;
count=count;

Time : 17/08/24 12:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
keys=new int[computeCapacity(PERTURB_SHIFT)];
states=new byte[computeCapacity(PERTURB_SHIFT)];
size=size;
mask=source.mask;
count=count;

Time : 17/08/24 12:56
----------------------------------------
Thu Aug 24 12:58:26 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,144
Thu Aug 24 12:58:27 AEST 2017 Thu Aug 24 12:58:27 AEST 2017 : org.apache.commons.math.util.OpenIntToDoubleHashMap,145=>Find no block
Thu Aug 24 12:58:27 AEST 2017 Thu Aug 24 12:58:27 AEST 2017 : org.apache.commons.math.linear.OpenMapRealVector,74=>Find no block
Thu Aug 24 12:58:28 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,75
Thu Aug 24 13:00:27 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,76
Thu Aug 24 13:00:28 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,77
Thu Aug 24 13:00:29 AEST 2017 Thu Aug 24 13:00:29 AEST 2017 : org.apache.commons.math.linear.OpenMapRealVector,78=>Find no block
Thu Aug 24 13:00:30 AEST 2017 Thu Aug 24 13:00:30 AEST 2017 : org.apache.commons.math.linear.OpenMapRealVector,179=>Find no block
Thu Aug 24 13:00:31 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,180
Thu Aug 24 13:01:29 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,181
Thu Aug 24 13:01:31 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,182
Thu Aug 24 13:01:32 AEST 2017 Thu Aug 24 13:01:32 AEST 2017 : org.apache.commons.math.linear.OpenMapRealVector,183=>Find no block
Thu Aug 24 13:01:32 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,529
Thu Aug 24 13:01:33 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,532
Thu Aug 24 13:02:24 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,535
Thu Aug 24 13:03:13 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,208
Thu Aug 24 13:03:54 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,663

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
index=0;
checkIndex(index);
if(!isDefaultValue(value)){
entries.put(index,value);
}else if(entries.containsKey(index)){
entries.remove(index);
}

Time : 17/08/24 13:05
----------------------------------------
Thu Aug 24 13:07:13 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,664
Thu Aug 24 13:07:14 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,665
Thu Aug 24 13:07:14 AEST 2017 Thu Aug 24 13:07:14 AEST 2017 : org.apache.commons.math.linear.OpenMapRealVector,669=>Find no block
Thu Aug 24 13:07:16 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,241
Thu Aug 24 13:07:19 AEST 2017 Thu Aug 24 13:07:19 AEST 2017 : org.apache.commons.math.util.OpenIntToDoubleHashMap,498=>Find no block
Thu Aug 24 13:07:20 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,501
Thu Aug 24 13:07:59 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,504
Thu Aug 24 13:08:00 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,506
Thu Aug 24 13:08:01 AEST 2017 Thu Aug 24 13:08:01 AEST 2017 : org.apache.commons.math.util.OpenIntToDoubleHashMap,509=>Find no block
Thu Aug 24 13:08:02 AEST 2017 Thu Aug 24 13:08:02 AEST 2017 : org.apache.commons.math.util.OpenIntToDoubleHashMap,511=>Find no block
Thu Aug 24 13:08:03 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,518
Thu Aug 24 13:08:07 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,546
Thu Aug 24 13:08:07 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,549
Thu Aug 24 13:08:08 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,552
Thu Aug 24 13:08:58 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,563
Thu Aug 24 13:08:59 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,568
Thu Aug 24 13:10:03 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,572
Thu Aug 24 13:10:04 AEST 2017 Thu Aug 24 13:10:04 AEST 2017 : org.apache.commons.math.util.OpenIntToDoubleHashMap,580=>Find no block
Thu Aug 24 13:10:05 AEST 2017 Thu Aug 24 13:10:05 AEST 2017 : org.apache.commons.math.util.OpenIntToDoubleHashMap,582=>Find no block
Thu Aug 24 13:10:06 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,479
Thu Aug 24 13:11:28 AEST 2017 org.apache.commons.math.linear.OpenMapRealVector,480
Thu Aug 24 13:11:29 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,180
Thu Aug 24 13:14:47 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,181
Thu Aug 24 13:14:48 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,182
Thu Aug 24 13:15:55 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,385
Thu Aug 24 13:15:59 AEST 2017 org.apache.commons.math.linear.AbstractRealVector,76
Thu Aug 24 13:17:07 AEST 2017 Thu Aug 24 13:17:07 AEST 2017 : org.apache.commons.math.linear.AbstractRealVector,81=>Find no block
Thu Aug 24 13:17:08 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,103
Thu Aug 24 13:17:12 AEST 2017 Thu Aug 24 13:17:12 AEST 2017 : org.apache.commons.math.util.OpenIntToDoubleHashMap,104=>Find no block
Thu Aug 24 13:17:13 AEST 2017 Thu Aug 24 13:17:13 AEST 2017 : org.apache.commons.math.util.OpenIntToDoubleHashMap,120=>Find no block
Thu Aug 24 13:17:14 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,121
Thu Aug 24 13:20:56 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,122
Thu Aug 24 13:20:57 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,123
Thu Aug 24 13:20:58 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,124
Thu Aug 24 13:20:59 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,125
Thu Aug 24 13:21:00 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,126
Thu Aug 24 13:21:01 AEST 2017 Thu Aug 24 13:21:01 AEST 2017 : org.apache.commons.math.util.OpenIntToDoubleHashMap,127=>Find no block
Thu Aug 24 13:21:03 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,153
Thu Aug 24 13:21:06 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,156
Thu Aug 24 13:21:47 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,157
Thu Aug 24 13:21:48 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,158
Thu Aug 24 13:21:48 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,159
Thu Aug 24 13:21:49 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,259
Thu Aug 24 13:21:53 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,272
Thu Aug 24 13:29:02 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,273
Thu Aug 24 13:29:03 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,274
Thu Aug 24 13:29:04 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,275
Thu Aug 24 13:29:05 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,410
Thu Aug 24 13:30:57 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,411
Thu Aug 24 13:30:58 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,412
Thu Aug 24 13:33:44 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,413
Thu Aug 24 13:35:49 AEST 2017 org.apache.commons.math.util.OpenIntToDoubleHashMap,418

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(index<0){
index=changeIndexSign(index);
previous=values[index];
newMapping=false;
}
keys[index]=key;
states[index]=REMOVED;

Time : 17/08/24 13:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
values[index]=missingEntries;
if(index<0){
index=changeIndexSign(index);
previous=values[index];
newMapping=false;
}
keys[index]=key;
states[index]=REMOVED;

Time : 17/08/24 13:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
--size;
if(index<0){
index=changeIndexSign(index);
previous=values[index];
newMapping=false;
}
keys[index]=key;
states[index]=REMOVED;

Time : 17/08/24 13:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
++count;
if(index<0){
index=changeIndexSign(index);
previous=values[index];
newMapping=false;
}
keys[index]=key;
states[index]=REMOVED;

Time : 17/08/24 13:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
values[index]=missingEntries;
--size;
if(index<0){
index=changeIndexSign(index);
previous=values[index];
newMapping=false;
}
keys[index]=key;
states[index]=REMOVED;

Time : 17/08/24 13:52
----------------------------------------
Timeout time : 17/08/24 14:02
