=================================================
Project : math_1	start : 17/08/22 19:29
Current failed test : org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor_purify_8 | 17/08/22 19:30
Tue Aug 22 19:31:27 AEST 2017 org.apache.commons.math3.exception.util.LocalizedFormats,382
Tue Aug 22 19:35:35 AEST 2017 org.apache.commons.math3.exception.util.LocalizedFormats,383
Tue Aug 22 19:35:36 AEST 2017 Tue Aug 22 19:35:36 AEST 2017 : org.apache.commons.math3.exception.util.LocalizedFormats,390=>Find no block
Tue Aug 22 19:35:36 AEST 2017 org.apache.commons.math3.exception.util.LocalizedFormats,396
Tue Aug 22 19:35:36 AEST 2017 org.apache.commons.math3.exception.MathIllegalStateException,80
Tue Aug 22 19:35:40 AEST 2017 org.apache.commons.math3.exception.MathIllegalStateException,86
Tue Aug 22 19:35:43 AEST 2017 org.apache.commons.math3.fraction.BigFraction,306

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n<maxIterations)&&(FastMath.abs(value-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 19:36
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3059069600907303 : [/home/similarfix/d4j/projects/math/math_1_buggy/src/main/java/org/apache/commons/math3/fraction/BigFraction.java=>0,0]
if((n<maxIterations)&&(FastMath.abs(convergent-value)>epsilon)){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

Time : 17/08/22 19:38
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/similarfix/d4j/projects/math/math_1_buggy/src/main/java/org/apache/commons/math3/fraction/BigFraction.java=>303,307]
if((p2>overflow)||(q2>overflow)){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 19:38
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/similarfix/d4j/projects/math/math_1_buggy/src/main/java/org/apache/commons/math3/fraction/BigFraction.java=>303,307]
if((n<maxIterations)&&(FastMath.abs(value-value)>epsilon)){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 19:38
----------------------------------------
Success time : 17/08/22 19:38
Current failed test : org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor_purify_8 | 17/08/22 19:38
Tue Aug 22 19:39:50 AEST 2017 org.apache.commons.math3.exception.util.LocalizedFormats,382
Tue Aug 22 19:43:57 AEST 2017 org.apache.commons.math3.exception.util.LocalizedFormats,383
Tue Aug 22 19:43:58 AEST 2017 Tue Aug 22 19:43:58 AEST 2017 : org.apache.commons.math3.exception.util.LocalizedFormats,390=>Find no block
Tue Aug 22 19:43:58 AEST 2017 org.apache.commons.math3.exception.util.LocalizedFormats,396
Tue Aug 22 19:43:58 AEST 2017 org.apache.commons.math3.exception.MathIllegalStateException,80
Tue Aug 22 19:44:01 AEST 2017 org.apache.commons.math3.exception.MathIllegalStateException,86
Tue Aug 22 19:44:04 AEST 2017 org.apache.commons.math3.fraction.Fraction,215

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((FastMath.abs(p2)>overflow)&&q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 19:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q2==0)||(overflow==0)){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 19:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q2==0)||(overflow==0)){
throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,p2,q1);
}

Time : 17/08/22 19:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((FastMath.abs(value)<=DEFAULT_EPSILON&&DEFAULT_EPSILON<=2.0)){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 19:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((FastMath.abs(value)>overflow)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 19:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(stop&&(FastMath.abs(DEFAULT_EPSILON-DEFAULT_EPSILON)<=DEFAULT_EPSILON)){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 19:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(stop&&(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 20:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(value)<=0.1*DEFAULT_EPSILON||(DEFAULT_EPSILON==0&&value<=DEFAULT_EPSILON&&DEFAULT_EPSILON<0)){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 20:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((FastMath.abs(DEFAULT_EPSILON)>overflow)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 20:07
----------------------------------------
Tue Aug 22 20:10:06 AEST 2017 org.apache.commons.math3.fraction.FractionConversionException,53
Tue Aug 22 20:10:18 AEST 2017 Tue Aug 22 20:10:18 AEST 2017 : org.apache.commons.math3.fraction.FractionConversionException,54=>Find no block
Tue Aug 22 20:10:18 AEST 2017 Tue Aug 22 20:10:18 AEST 2017 : org.apache.commons.math3.exception.ConvergenceException,48=>Find no block
Tue Aug 22 20:10:18 AEST 2017 org.apache.commons.math3.exception.ConvergenceException,49
Tue Aug 22 20:11:04 AEST 2017 Tue Aug 22 20:11:04 AEST 2017 : org.apache.commons.math3.exception.ConvergenceException,50=>Find no block
Tue Aug 22 20:11:04 AEST 2017 org.apache.commons.math3.fraction.Fraction,144
Tue Aug 22 20:11:35 AEST 2017 org.apache.commons.math3.exception.MathIllegalStateException,69
Tue Aug 22 20:11:38 AEST 2017 Tue Aug 22 20:11:38 AEST 2017 : org.apache.commons.math3.exception.MathIllegalStateException,70=>Find no block
Tue Aug 22 20:11:38 AEST 2017 org.apache.commons.math3.exception.MathIllegalStateException,74
Tue Aug 22 20:11:42 AEST 2017 Tue Aug 22 20:11:42 AEST 2017 : org.apache.commons.math3.exception.MathIllegalStateException,45=>Find no block
Tue Aug 22 20:11:42 AEST 2017 org.apache.commons.math3.exception.MathIllegalStateException,46
Tue Aug 22 20:12:17 AEST 2017 org.apache.commons.math3.exception.MathIllegalStateException,47
Tue Aug 22 20:12:17 AEST 2017 Tue Aug 22 20:12:17 AEST 2017 : org.apache.commons.math3.exception.MathIllegalStateException,48=>Find no block
Tue Aug 22 20:12:18 AEST 2017 org.apache.commons.math3.fraction.Fraction,220

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(n<maxIterations&&FastMath.abs(convergent-value)>epsilon&&r0<=value){
p0=p1;
p1=p2;
q0=q1;
q1=q2;
a0=a1;
r0=r1;
}else {
stop=true;
}

Time : 17/08/22 20:17
----------------------------------------
Tue Aug 22 20:25:54 AEST 2017 org.apache.commons.math3.fraction.Fraction,221
Tue Aug 22 20:25:54 AEST 2017 org.apache.commons.math3.fraction.Fraction,222
Tue Aug 22 20:25:55 AEST 2017 org.apache.commons.math3.fraction.Fraction,223
Tue Aug 22 20:25:55 AEST 2017 org.apache.commons.math3.fraction.Fraction,224
Tue Aug 22 20:25:55 AEST 2017 org.apache.commons.math3.fraction.Fraction,225
Tue Aug 22 20:25:55 AEST 2017 org.apache.commons.math3.fraction.Fraction,195
Tue Aug 22 20:35:43 AEST 2017 org.apache.commons.math3.fraction.Fraction,196
Tue Aug 22 20:38:20 AEST 2017 org.apache.commons.math3.fraction.Fraction,197
Tue Aug 22 20:40:50 AEST 2017 org.apache.commons.math3.fraction.Fraction,198
Tue Aug 22 20:44:53 AEST 2017 org.apache.commons.math3.fraction.Fraction,200
Tue Aug 22 20:44:57 AEST 2017 org.apache.commons.math3.fraction.Fraction,201
Tue Aug 22 20:48:59 AEST 2017 org.apache.commons.math3.fraction.Fraction,203
Tue Aug 22 20:51:23 AEST 2017 org.apache.commons.math3.fraction.Fraction,204
Tue Aug 22 20:51:23 AEST 2017 org.apache.commons.math3.fraction.Fraction,206
Tue Aug 22 20:55:27 AEST 2017 org.apache.commons.math3.fraction.Fraction,207
Tue Aug 22 20:55:27 AEST 2017 org.apache.commons.math3.fraction.Fraction,208
Tue Aug 22 20:56:35 AEST 2017 org.apache.commons.math3.fraction.Fraction,209
Tue Aug 22 20:57:17 AEST 2017 org.apache.commons.math3.fraction.Fraction,210

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((a1==0)||(overflow==0)){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 20:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((a1==0)||(overflow==0)){
throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,p2,q2);
}

Time : 17/08/22 21:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(p2)>overflow)&&n>=maxDenominator){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 21:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(value)<=DEFAULT_EPSILON&&DEFAULT_EPSILON<=2.0)){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 21:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(value)>overflow)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 21:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if(FastMath.abs(value)<=0.1*DEFAULT_EPSILON||(DEFAULT_EPSILON==0&&value<=DEFAULT_EPSILON&&DEFAULT_EPSILON<0)){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 21:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
p2=(a1*p1)+p0;
q2=(a1*q1)+q0;
if((FastMath.abs(DEFAULT_EPSILON)>overflow)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
throw new FractionConversionException(value,p2,q2);
}

Time : 17/08/22 21:14
----------------------------------------
Tue Aug 22 21:17:25 AEST 2017 org.apache.commons.math3.fraction.Fraction,212
Tue Aug 22 21:17:25 AEST 2017 org.apache.commons.math3.fraction.Fraction,218

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((FastMath.abs(p2)>overflow)&&q2<maxDenominator){
throw new FractionConversionException(value,p2,q2);
}
double convergent=(double)p2/(double)q2;

Time : 17/08/22 21:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q2==0)||(overflow==0)){
throw new FractionConversionException(value,p2,q2);
}
double convergent=(double)p2/(double)q2;

Time : 17/08/22 21:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q2==0)||(overflow==0)){
throw new MathArithmeticException(LocalizedFormats.GCD_OVERFLOW_64_BITS,p2,q1);
}
double convergent=(double)p2/(double)q2;

Time : 17/08/22 21:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((FastMath.abs(p2)>overflow)&&n>=maxDenominator){
throw new FractionConversionException(value,p2,q2);
}
double convergent=(double)p2/(double)q2;

Time : 17/08/22 21:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(stop&&(FastMath.abs(q2)>overflow)){
throw new FractionConversionException(value,p2,q2);
}
double convergent=(double)p2/(double)q2;

Time : 17/08/22 21:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(stop&&(FastMath.abs(DEFAULT_EPSILON-DEFAULT_EPSILON)<=DEFAULT_EPSILON)){
throw new FractionConversionException(value,p2,q2);
}
double convergent=(double)p2/(double)q2;

Time : 17/08/22 21:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((FastMath.abs(DEFAULT_EPSILON)>overflow)||DEFAULT_EPSILON<=DEFAULT_EPSILON*DEFAULT_EPSILON){
throw new FractionConversionException(value,p2,q2);
}
double convergent=(double)p2/(double)q2;

Time : 17/08/22 21:36
----------------------------------------
Tue Aug 22 21:39:06 AEST 2017 org.apache.commons.math3.fraction.Fraction,219
Tue Aug 22 21:39:06 AEST 2017 org.apache.commons.math3.fraction.Fraction,229
Tue Aug 22 21:50:29 AEST 2017 Tue Aug 22 21:50:29 AEST 2017 : org.apache.commons.math3.fraction.Fraction,180=>Find no block
Tue Aug 22 21:50:29 AEST 2017 org.apache.commons.math3.fraction.Fraction,181
Tue Aug 22 21:53:10 AEST 2017 org.apache.commons.math3.fraction.Fraction,182
Tue Aug 22 21:53:10 AEST 2017 org.apache.commons.math3.fraction.Fraction,183
Tue Aug 22 22:04:40 AEST 2017 org.apache.commons.math3.fraction.Fraction,184
Timeout time : 17/08/22 22:09
