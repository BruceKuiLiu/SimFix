=================================================
Project : math_24	start : 17/08/24 15:18
Current failed test : org.apache.commons.math3.optimization.univariate.BrentOptimizerTest::testMath855 | 17/08/24 15:19
Thu Aug 24 15:22:33 AEST 2017 Thu Aug 24 15:22:33 AEST 2017 : org.apache.commons.math3.util.MathArrays,143=>Find no block
Thu Aug 24 15:22:34 AEST 2017 Thu Aug 24 15:22:34 AEST 2017 : org.apache.commons.math3.util.MathArrays,143=>Find no block
Thu Aug 24 15:22:36 AEST 2017 org.apache.commons.math3.util.MathArrays,228
Thu Aug 24 15:29:27 AEST 2017 org.apache.commons.math3.util.MathArrays,229
Thu Aug 24 15:29:28 AEST 2017 org.apache.commons.math3.util.MathArrays,233

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
val[index]=previous;
if(strict){
if(val[index]<=previous){
break;
}
}else {
if(val[index]<previous){
break;
}
}

Time : 17/08/24 15:33
----------------------------------------
Thu Aug 24 15:47:21 AEST 2017 Thu Aug 24 15:47:21 AEST 2017 : org.apache.commons.math3.util.MathArrays,234=>Find no block
Thu Aug 24 15:47:22 AEST 2017 org.apache.commons.math3.util.MathArrays,236
Thu Aug 24 15:47:22 AEST 2017 org.apache.commons.math3.util.MathArrays,237
Thu Aug 24 15:47:23 AEST 2017 org.apache.commons.math3.util.MathArrays,262
Thu Aug 24 15:51:58 AEST 2017 org.apache.commons.math3.util.MathArrays,265
Thu Aug 24 15:55:20 AEST 2017 org.apache.commons.math3.util.MathArrays,267
Thu Aug 24 15:55:21 AEST 2017 org.apache.commons.math3.util.MathArrays,289
Thu Aug 24 15:55:24 AEST 2017 Thu Aug 24 15:55:24 AEST 2017 : org.apache.commons.math3.util.MathArrays,290=>Find no block
Thu Aug 24 15:55:25 AEST 2017 org.apache.commons.math3.util.MathArrays,300
Thu Aug 24 15:55:28 AEST 2017 Thu Aug 24 15:55:28 AEST 2017 : org.apache.commons.math3.util.MathArrays,301=>Find no block
Thu Aug 24 15:55:29 AEST 2017 org.apache.commons.math3.analysis.FunctionUtils,141
Thu Aug 24 15:55:33 AEST 2017 org.apache.commons.math3.analysis.FunctionUtils,141
Thu Aug 24 15:55:34 AEST 2017 org.apache.commons.math3.analysis.FunctionUtils,144
Thu Aug 24 16:11:33 AEST 2017 org.apache.commons.math3.analysis.FunctionUtils,145
Thu Aug 24 16:31:16 AEST 2017 org.apache.commons.math3.analysis.FunctionUtils,146
Thu Aug 24 16:31:17 AEST 2017 org.apache.commons.math3.analysis.FunctionUtils,148
Thu Aug 24 16:31:17 AEST 2017 Thu Aug 24 16:31:17 AEST 2017 : org.apache.commons.math3.analysis.function.StepFunction,64=>Find no block
Thu Aug 24 16:31:18 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,65
Thu Aug 24 16:32:53 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,69
Thu Aug 24 16:40:29 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,73
Thu Aug 24 16:54:12 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,76
Thu Aug 24 17:08:06 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,78
Thu Aug 24 17:08:07 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,79
Thu Aug 24 17:08:08 AEST 2017 Thu Aug 24 17:08:08 AEST 2017 : org.apache.commons.math3.analysis.function.StepFunction,80=>Find no block
Thu Aug 24 17:08:09 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,84

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(ordinate==null){
return Double.NaN;
}
if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}

Time : 17/08/24 17:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(ordinate,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return fx;

Time : 17/08/24 17:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
if(x<=x){
return 0;
}
return fx;

Time : 17/08/24 17:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
if(x>=x){
return 1;
}
return fx;

Time : 17/08/24 17:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
if(x<=x){
return 0;
}
if(x>=x){
return 1;
}
return fx;

Time : 17/08/24 17:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(x<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return fx;

Time : 17/08/24 17:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
index=x<0?1:0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return fx;

Time : 17/08/24 17:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
x=x*((2*x+1)/(6*x)-1);
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return fx;

Time : 17/08/24 17:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
x=x*((2*x+1)/(6*x)-1);
int index=Arrays.binarySearch(abscissa,x);
double fx=0;
index=x<0?1:0;
if(index<-1){
fx=ordinate[-index-2];
}else if(index>=0){
fx=ordinate[index];
}else {
fx=ordinate[0];
}
return fx;

Time : 17/08/24 17:45
----------------------------------------
Thu Aug 24 17:50:07 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,85
Thu Aug 24 17:50:07 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,87
Thu Aug 24 17:50:08 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,89
Thu Aug 24 17:50:09 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,90
Thu Aug 24 17:50:10 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,96
Thu Aug 24 17:50:11 AEST 2017 org.apache.commons.math3.analysis.function.StepFunction,99
Thu Aug 24 17:50:12 AEST 2017 org.apache.commons.math3.util.MathArrays,532
Thu Aug 24 17:50:46 AEST 2017 org.apache.commons.math3.util.MathArrays,560

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double[] output=new double[len];
System.arraycopy(output,0,output,0,FastMath.min(len,source.length));
return output;

Time : 17/08/24 17:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double[] output=new double[len];
System.arraycopy(source,0,source,0,FastMath.min(len,source.length));
return output;

Time : 17/08/24 17:55
----------------------------------------
Thu Aug 24 18:02:48 AEST 2017 org.apache.commons.math3.util.MathArrays,561
Thu Aug 24 18:02:49 AEST 2017 org.apache.commons.math3.util.MathArrays,562
Thu Aug 24 18:02:50 AEST 2017 Thu Aug 24 18:02:50 AEST 2017 : org.apache.commons.math3.analysis.function.Sin,33=>Find no block
Thu Aug 24 18:02:51 AEST 2017 org.apache.commons.math3.analysis.function.Sin,36
Thu Aug 24 18:07:01 AEST 2017 org.apache.commons.math3.optimization.univariate.BrentOptimizer,183
Thu Aug 24 18:38:14 AEST 2017 org.apache.commons.math3.optimization.univariate.BrentOptimizer,184
Thu Aug 24 18:38:15 AEST 2017 Thu Aug 24 18:38:15 AEST 2017 : org.apache.commons.math3.util.FastMath,3785=>Find no block
Thu Aug 24 18:38:16 AEST 2017 org.apache.commons.math3.util.FastMath,3788
Thu Aug 24 18:38:46 AEST 2017 org.apache.commons.math3.util.FastMath,3794

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double a=-k*1.5707963;
remA=xa+a;
xa=a+a;
remB=-(remA-xa);

Time : 17/08/24 18:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
double a=-k*1.5707963;
remA=xa+a;
xa=a+a;
xb=-(xa-a);
remB=-(remA-xa);

Time : 17/08/24 18:43
----------------------------------------
Thu Aug 24 18:54:57 AEST 2017 org.apache.commons.math3.util.FastMath,3795
Thu Aug 24 18:54:58 AEST 2017 org.apache.commons.math3.util.FastMath,3796
Thu Aug 24 19:00:26 AEST 2017 org.apache.commons.math3.util.FastMath,3798
Thu Aug 24 19:11:44 AEST 2017 org.apache.commons.math3.util.FastMath,3799
Thu Aug 24 19:20:43 AEST 2017 org.apache.commons.math3.util.FastMath,3800
Thu Aug 24 19:29:54 AEST 2017 org.apache.commons.math3.util.FastMath,3801
Thu Aug 24 19:34:54 AEST 2017 org.apache.commons.math3.util.FastMath,3803
Thu Aug 24 19:42:32 AEST 2017 org.apache.commons.math3.util.FastMath,3804
Thu Aug 24 19:52:14 AEST 2017 org.apache.commons.math3.util.FastMath,3805
Thu Aug 24 19:59:39 AEST 2017 org.apache.commons.math3.util.FastMath,3806
Thu Aug 24 20:02:46 AEST 2017 org.apache.commons.math3.util.FastMath,3808
Thu Aug 24 20:02:49 AEST 2017 org.apache.commons.math3.util.FastMath,3809
Thu Aug 24 20:02:50 AEST 2017 org.apache.commons.math3.util.FastMath,3818
Thu Aug 24 20:06:05 AEST 2017 org.apache.commons.math3.util.FastMath,3819
Thu Aug 24 20:06:06 AEST 2017 org.apache.commons.math3.util.FastMath,3820
Thu Aug 24 20:06:07 AEST 2017 Thu Aug 24 20:06:07 AEST 2017 : org.apache.commons.math3.util.FastMath,3821=>Find no block
Thu Aug 24 20:06:08 AEST 2017 org.apache.commons.math3.util.FastMath,3827
Thu Aug 24 20:06:11 AEST 2017 org.apache.commons.math3.util.FastMath,3833
Thu Aug 24 20:06:14 AEST 2017 org.apache.commons.math3.util.FastMath,3839
Thu Aug 24 20:06:17 AEST 2017 org.apache.commons.math3.util.FastMath,1653
Thu Aug 24 20:16:35 AEST 2017 org.apache.commons.math3.util.FastMath,1655
Thu Aug 24 20:16:36 AEST 2017 org.apache.commons.math3.util.FastMath,1656
Thu Aug 24 20:16:37 AEST 2017 org.apache.commons.math3.util.FastMath,1657
Thu Aug 24 20:16:38 AEST 2017 org.apache.commons.math3.util.FastMath,1658
Thu Aug 24 20:16:39 AEST 2017 org.apache.commons.math3.util.FastMath,1661
Thu Aug 24 20:16:39 AEST 2017 org.apache.commons.math3.util.FastMath,1663
Thu Aug 24 20:16:40 AEST 2017 org.apache.commons.math3.util.FastMath,1673
Timeout time : 17/08/24 20:22
