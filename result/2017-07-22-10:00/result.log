=================================================
Project : math_59	start : 17/07/20 17:52

----------------------------------------
Pass Single Test :
return (a<=b)?b:(Float.isNaN(a+b)?Float.NaN:a);

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
return (a<=b)?b:(Float.isNaN(a+b)?Float.NaN:a);

----------------------------------------

Successfully find a patch!
Failed time : 17/07/20 17:56
=================================================
Project : math_79	start : 17/07/20 17:56
org.apache.commons.math.util.MathUtils,1624
----------------------------------------
Pass Single Test :
int sum=0;
for(int i=NAN_GAP;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=0;i<p1.length;i++){
 final double dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
int sum=0;
for(int i=0;i<p1.length;i++){
 final double dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
double sum=0;
for(int i=0;i<p1.length;i++){
 final double dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
double sum=0;
for(int i=0;i<p1.length;i++){
 final double dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
double sum=0;
for(int i=NAN_GAP;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=0;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(0);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=0;
for(int i=0;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(0);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=NAN_GAP;i<p1.length;i++){
if(SAFE_MIN==0.0){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=NAN_GAP;i<p1.length;i++){
if(100*Math.max(SAFE_MIN,SAFE_MIN)<SAFE_MIN||SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=NAN_GAP;i<p1.length;i++){
if(100*Math.max(SAFE_MIN,SAFE_MIN)<SAFE_MIN||SAFE_MIN<SAFE_MIN){
break;
}
if(SAFE_MIN==0.0){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=4;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=9;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=1;
for(int i=4;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=1;
for(int i=NAN_GAP;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=1;
for(int i=9;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=0;
for(int i=4;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=0;
for(int i=9;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=4;i<p1.length;i++){
if(100*SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=NAN_GAP;i<p1.length;i++){
if(100*SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=9;i<p1.length;i++){
if(100*SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=1;
for(int i=4;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=1;
for(int i=NAN_GAP;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=1;
for(int i=9;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=1;
for(int i=4;i<p1.length;i++){
if(100*SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=1;
for(int i=NAN_GAP;i<p1.length;i++){
if(100*SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=1;
for(int i=9;i<p1.length;i++){
if(100*SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=0;
for(int i=4;i<p1.length;i++){
if(100*SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=0;
for(int i=NAN_GAP;i<p1.length;i++){
if(100*SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=0;
for(int i=9;i<p1.length;i++){
if(100*SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=1;
for(int i=4;i<p1.length;i++){
if(100*SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=1;
for(int i=NAN_GAP;i<p1.length;i++){
if(100*SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=1;
for(int i=9;i<p1.length;i++){
if(100*SAFE_MIN<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=0;i<p1.length;i++){
 final double dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(0);

----------------------------------------

----------------------------------------
Pass Single Test :
double sum=0;
for(int i=0;i<p1.length;i++){
 final double dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(0);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=10;i<p1.length;i++){
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=4;i<p1.length;i++){
if(100*Math.max(SAFE_MIN,SAFE_MIN)<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=NAN_GAP;i<p1.length;i++){
if(100*Math.max(SAFE_MIN,SAFE_MIN)<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------

----------------------------------------
Pass Single Test :
int sum=0;
for(int i=10;i<p1.length;i++){
if(100*Math.max(SAFE_MIN,SAFE_MIN)<SAFE_MIN){
break;
}
 final int dp=p1[i]-p2[i];
sum+=dp*dp;
}
return Math.sqrt(sum);

----------------------------------------
Failed time : 17/07/20 18:35
=================================================
Project : closure_57	start : 17/07/20 18:35
com.google.javascript.jscomp.ClosureCodingConvention,197
----------------------------------------
Pass Single Test :
if(target!=null&&target.getType()==Token.STRING){
className=target.getString();
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(target!=null&&target.getType()==Token.STRING){
className=target.getString();
}

----------------------------------------

Successfully find a patch!
Failed time : 17/07/20 18:59
=================================================
Project : closure_73	start : 17/07/20 18:59
com.google.javascript.jscomp.CodeGenerator,1045
----------------------------------------
Pass Single Test :
if(c>0x1f&&c<0x7f){
sb.append(c);
}else {
appendHexJavaScriptRepresentation(sb,c);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(c>0x1f&&c<0x7f){
sb.append(c);
}else {
appendHexJavaScriptRepresentation(sb,c);
}

----------------------------------------

Successfully find a patch!
Failed time : 17/07/20 19:18
=================================================
Project : closure_14	start : 17/07/20 19:18
com.google.javascript.jscomp.ControlFlowAnalysis,767
----------------------------------------
Pass Single Test :
for(Node finallyNode : cfa.finallyMap.get(parent)){
cfa.createEdge(fromNode,Branch.ON_EX,finallyNode);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(Node finallyNode : cfa.finallyMap.get(parent)){
cfa.createEdge(fromNode,Branch.ON_EX,finallyNode);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(Node finallyNode : cfa.finallyMap.get(parent)){
return computeFollowNode(fromNode,parent,cfa);
}

----------------------------------------
Failed time : 17/07/20 19:33
=================================================
Project : chart_1	start : 17/07/20 19:33
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,1797
----------------------------------------
Pass Single Test :
if(dataset==null){
return result;
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dataset==null){
return result;
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dataset==null){
return null;
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dataset==null){
return null;
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dataset==null){
throw new IllegalArgumentException("Null 'dataset' argument.");
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dataset==null){
throw new IllegalArgumentException("Null 'dataset' argument.");
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dataset==this.toolTipGeneratorList.get(index)){
return result;
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dataset==this.toolTipGeneratorList.get(index)){
return result;
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dataset!=dataset){
return result;
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dataset!=dataset){
return result;
}

----------------------------------------

Successfully find a patch!
Success time : 17/07/20 19:43
=================================================
Project : chart_20	start : 17/07/20 19:43
org.jfree.chart.plot.ValueMarker,95
----------------------------------------
Pass Single Test :
super(paint,stroke,outlinePaint,outlineStroke,alpha);
this.value=value;

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
super(paint,stroke,outlinePaint,outlineStroke,alpha);
this.value=value;

----------------------------------------

Successfully find a patch!
Failed time : 17/07/20 19:47
=================================================
Project : chart_7	start : 17/07/20 19:47
org.jfree.data.time.TimePeriodValues,299
----------------------------------------
Pass Single Test :
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(middle>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(middle>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(middle>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(middle>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(middle>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(middle>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(start>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

----------------------------------------

----------------------------------------
Pass Single Test :
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(middle>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(middle>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(end>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(end>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

----------------------------------------

Successfully find a patch!
Success time : 17/07/20 19:55
=================================================
Project : lang_33	start : 17/07/20 19:55
org.apache.commons.lang3.ClassUtils,909
----------------------------------------
Pass Single Test :
for(int i=0;i<array.length;i++){
classes[i]=array[i]==null?null:array[i].getClass();
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<array.length;i++){
classes[i]=array[i]==null?null:array[i].getClass();
}

----------------------------------------

Successfully find a patch!
Failed time : 17/07/20 20:01
=================================================
Project : lang_39	start : 17/07/20 20:01
org.apache.commons.lang3.StringUtils,3675
----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i]);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i]);

if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>0){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchList.length;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>tempIndex){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=0;i<searchLength;i++){
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
int greater=replacementList[i].length()-searchList[i].length();
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);
if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
continue;
}
tempIndex=text.indexOf(searchList[i],start);

if(greater>greater){
textIndex=tempIndex;
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
for(int i=replacementLength;i<searchList.length;i++){
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
for(int i=replacementLength;i<searchList.length;i++){
int greater=replacementList[i].length()-searchList[i].length();
if(greater>0){
increase+=3*greater;
}
}

----------------------------------------

Successfully find a patch!
Success time : 17/07/21 00:21
=================================================
Project : lang_58	start : 17/07/21 00:21
org.apache.commons.lang.math.NumberUtils,452
----------------------------------------
Pass Single Test :
if(dec==null&&exp==null&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&exp==null&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&exp==null&&exp==null&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&exp==null&&exp==null&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&exp==null&&(numeric.charAt(0)=='-'&&isDigits(numeric.substring(1))||isDigits(numeric))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&exp==null&&(numeric.charAt(0)=='-'&&isDigits(numeric.substring(1))||isDigits(numeric))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&exp==null&&(numeric.charAt(0)=='-'&&isDigits(numeric.substring(1))||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&exp==null&&(numeric.charAt(0)=='-'&&isDigits(numeric.substring(1))||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&exp==null&&(numeric.charAt(0)=='-'||isDigits(numeric))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
Pass Single Test :
if(dec==null&&exp==null&&exp==null&&(numeric.charAt(0)=='-'&&isDigits(numeric.substring(1))||isDigits(numeric))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&exp==null&&exp==null&&(numeric.charAt(0)=='-'&&isDigits(numeric.substring(1))||isDigits(numeric))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&exp==null&&exp==null&&(numeric.charAt(0)=='-'&&isDigits(numeric.substring(1))||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&exp==null&&exp==null&&(numeric.charAt(0)=='-'&&isDigits(numeric.substring(1))||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&exp==null&&exp==null&&(numeric.charAt(0)=='-'||isDigits(numeric))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&exp==null&&exp==null&&(numeric.charAt(0)=='-'||isDigits(numeric))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(expPos+1<numeric.length()&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(expPos+1<numeric.length()&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(expPos+1<numeric.length()&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
expPos++;
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(expPos+1<numeric.length()&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
expPos++;
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(expPos+1<numeric.length()&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
expPos++;
new StringBuffer().append(numeric.charAt(expPos));

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(expPos+1<numeric.length()&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
expPos++;
new StringBuffer().append(numeric.charAt(expPos));

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(expPos+1<numeric.length()&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
expPos++;
new StringBuffer().append(numeric.charAt(expPos));
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(expPos+1<numeric.length()&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
expPos++;
new StringBuffer().append(numeric.charAt(expPos));
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(expPos+1<numeric.length()&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
expPos++;
new StringBuffer().append(numeric.charAt(expPos));

expPos++;
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(expPos+1<numeric.length()&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
expPos++;
new StringBuffer().append(numeric.charAt(expPos));

expPos++;
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(expPos+1<numeric.length()&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
expPos++;
new StringBuffer().append(numeric.charAt(expPos));

new StringBuffer().append(numeric.charAt(expPos));
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(expPos+1<numeric.length()&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
expPos++;
new StringBuffer().append(numeric.charAt(expPos));

new StringBuffer().append(numeric.charAt(expPos));
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&exp==null&&isDigits(numeric.substring(1))||(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&exp==null&&isDigits(numeric.substring(1))||(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(numeric.startsWith("0x")||(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(numeric.startsWith("0x")||(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(numeric.startsWith("--")){
return null;
}
if(dec==null&&exp==null&&isDigits(numeric.substring(1))||(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(numeric.startsWith("--")){
return null;
}
if(dec==null&&exp==null&&isDigits(numeric.substring(1))||(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(numeric.startsWith("--")){
return null;
}
if(numeric.startsWith("0x")||(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(numeric.startsWith("--")){
return null;
}
if(numeric.startsWith("0x")||(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(numeric==null||(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(numeric==null||(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(allZeros||(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
Pass Single Test :
if(dec==null&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&exp==null){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&exp==null){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&exp==null){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&exp==null){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&(numeric.charAt(0)=='-'||Character.isDigit(numeric.charAt(0)))){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&exp==null){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&exp==null){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(dec==null&&exp==null&&isDigits(numeric.substring(1))||exp==null){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(dec==null&&exp==null&&isDigits(numeric.substring(1))||exp==null){
try{
return createLong(numeric);
}catch (NumberFormatException nfe) {
}

return createBigInteger(numeric);
}

----------------------------------------

Successfully find a patch!
Success time : 17/07/21 00:54
=================================================
Project : lang_43	start : 17/07/21 00:54
org.apache.commons.lang.text.ExtendedMessageFormat,421
----------------------------------------
Pass Single Test :
if(escapingOn&&c[start]==QUOTE){
next(pos);
return appendTo==null?null:appendTo.append(QUOTE);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(escapingOn&&c[start]==QUOTE){
next(pos);
return appendTo==null?null:appendTo.append(QUOTE);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
if(escapingOn&&pattern.substring(pos.getIndex()).startsWith(ESCAPED_QUOTE)){
next(pos);
return appendTo==null?null:appendTo.append(QUOTE);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
if(escapingOn&&pattern.substring(pos.getIndex()).startsWith(ESCAPED_QUOTE)){
next(pos);
return appendTo==null?null:appendTo.append(QUOTE);
}

----------------------------------------

Successfully find a patch!

----------------------------------------
Pass Single Test :
escapingOn=Character.isWhitespace(QUOTE);
if(escapingOn&&c[start]==QUOTE){
return appendTo==null?null:appendTo.append(QUOTE);
}

----------------------------------------

----------------------------------------
----------------------------------------
Find a patch :
escapingOn=Character.isWhitespace(QUOTE);
if(escapingOn&&c[start]==QUOTE){
return appendTo==null?null:appendTo.append(QUOTE);
}

----------------------------------------

Successfully find a patch!
Success time : 17/07/21 01:21
=================================================
Project : lang_60	start : 17/07/21 01:21
org.apache.commons.lang.text.StrBuilder,1730Failed time : 17/07/21 01:35
